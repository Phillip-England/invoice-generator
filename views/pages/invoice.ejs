<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <%- include('../partials/styles.ejs') %>
    <title>Invoices</title>
</head>
<body NODE_ENV="<%=NODE_ENV%>">

    <div id="invoice_page_grid">

        <%- include('../partials/navbar.ejs') %>

        <div id="invoice_form_container">
            <form id='add_invoice_form' class="form_styles_general" onsubmit="event.preventDefault()">
                <h2 class="form_header">Add a New Invoice</h2>
                <label class="form_label" for="invoice_name">Invoice Name<span class="form_astrick">*</span></label>
                <input class="form_input" type="text" name="invoice_name">
                <label class="form_label" for="invoice_description">Invoice Description<span class="form_astrick">*</span></label>
                <input class="form_input" type="text" name="invoice_description">
                <input type="hidden" name="invoice_date" id="invoice_date">
                <input type="hidden" name="_csrf" value=<%=csrfToken%>>
                <div class="form_button_container">
                    <button type='submit' class="form_button" onclick="addInvoice(this)">
                        <p class="form_button_text">Add</p>
                        <i class="fa-solid fa-file-invoice-dollar"></i>
                    </button>
                    <div class="loading_icon"></div>
                </div>
            </form>
        </div>
        

        <button style=display:none; id="delete_invoice_button" onclick="deleteInvoices(this)">Delete</button>

        <div id="invoice_table_container">
            <% if (invoices.length > 0) { %>
                <table id="invoice_table" class="shadow_card">
                    <tr>
                        <th>Date</th>
                        <th>Name</th>
                        <th style="display:none;">Description</th>
                        <th>Cost</th>
                        <th>Delete</th>
                    </tr>
                    <% invoices.forEach(invoice => { %>
                        <tr class="invoice_info_row" invoice=<%= invoice._id %> >
                            <td><%=invoice.date%></td>
                            <% if (NODE_ENV == 'development') { %>
                                <td><a href=<%= 'http://localhost:5000/invoice/' + String(invoice._id) %>><%= invoice.name %> </a></td>
                            <% } else { %>
                                <td><a href=<%= "https://invoices-generate.herokuapp.com/invoice/" + String(invoice._id) %>><%= invoice.name %> </a></td>
                            <% } %>
                            <td style="display:none;"><%=invoice.description%></td>
                            <td>$<%=invoice.cost %> </td>
                            <td class="table_checkbox">
                                <input class='invoice_delete_checkbox' onclick="toggledDeleteButton()" type="checkbox">
                            </td>
                        </tr>
                    <% }) %>
                </table>
            <% } %>
        </div>

        

    </div>
    
</body>
</html>



<!-- contains functions to work with tables -->
<script src="../../public/service/tableFunctions.js"></script>
<!-- contains functions to work with URLS -->
<script src="../../public/service/URLFunctions.js"></script>
<!-- contains functions to work with forms -->
<script src="../../public/service/forms.js"></script>


<script>

    const addInvoice = async (e) => {

        //setting up our variables
        const dateInput = document.getElementById('invoice_date')
        let url
        let addInvoiceForm = document.getElementById('add_invoice_form')
        form.hiddenDate(dateInput) //adding our date before we check for uncompleted fields
        let uncompletedFields = form.getEmptyFields(addInvoiceForm)
        let loadingIcon = document.getElementsByClassName('loading_icon')

        //checking if we have empty fields
        if (uncompletedFields.length > 0) {
            form.showAstricks(uncompletedFields)
            return
        } else {
            form.displayLoader(e, loadingIcon[0])
        }
        
        //getting our url for our request
        url = getURL('/invoice/addInvoice')

        //calling our fetch request
        const response = await fetch(url, {
            method: "POST",
            body: form.getData(addInvoiceForm),
        })

        //reloading the page
        window.location.reload()

    }
    

    //toggles a delete button to remove specific invoices
    const toggledDeleteButton = () => {
        const deleteButton = document.getElementById('delete_invoice_button')
        const deleteCheckboxes = document.getElementsByClassName('invoice_delete_checkbox') //grabbing all our checkboxes as an array
        //looping through the checkboxes to see if any are checked
        toggleCheckboxButton(deleteCheckboxes, deleteButton, 'flex')
    }

    //deletes the checked invoice
    const deleteInvoices = async (e) => {

        let url //will hold the url to delete invoices
        const invoiceTable = document.getElementById('invoice_table')
        const invoiceInfoRows = document.getElementsByClassName('invoice_info_row') //this row contains all invoice data

        //this function loops through the table and returns an array
        //the array will contain any rows which contain a checkbox matching the given classname
        const checkedRows = getCheckedRows(invoiceInfoRows, 'invoice_delete_checkbox')

        //this function takes in an array of speicific rows and removes them
        //if the last row is removed, the given table is also removed
        removeRowsAndTable(checkedRows, invoiceTable)

        //removing our delete button
        e.style.display = 'none'

        //looping through our rows (each representing an invoice) to call fetch requests for deletion
        for (x = 0; x < checkedRows.length; x++) {
            
            //getting our url based off our NODE_ENV
            url = getURL('/invoice/deleteInvoice', {
                user: checkedRows[x].getAttribute('invoice')
            })

            //calling our fetch request to delete the invoice/invoices
            const response = await fetch(url, {
                method:'DELETE'
            })
            const data = await response.json()

            console.log(data)
        }

    }

</script>